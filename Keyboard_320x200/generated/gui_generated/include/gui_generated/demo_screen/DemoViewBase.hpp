/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DEMOVIEWBASE_HPP
#define DEMOVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/demo_screen/DemoPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <gui/containers/Keyboard.hpp>

class DemoViewBase : public touchgfx::View<DemoPresenter>
{
public:
    DemoViewBase();
    virtual ~DemoViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void line1Edit()
    {
        // Override and implement this function in Demo
    }
    virtual void line2Edit()
    {
        // Override and implement this function in Demo
    }
    virtual void editCancel()
    {
        // Override and implement this function in Demo
    }
    virtual void editApply()
    {
        // Override and implement this function in Demo
    }
    virtual void keyPressed()
    {
        // Override and implement this function in Demo
    }
    virtual void characterTyped(Unicode::UnicodeChar value)
    {
        // Override and implement this function in Demo
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image image1;
    touchgfx::Container content;
    touchgfx::TextArea label1;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  line1;
    touchgfx::TextArea label2;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  line2;
    touchgfx::Container footer;
    touchgfx::TextArea title;
    Keyboard keyboard;

    /*
     * Wildcard Buffers
     */
    static const uint16_t LINE1_SIZE = 20;
    touchgfx::Unicode::UnicodeChar line1Buffer[LINE1_SIZE];
    static const uint16_t LINE2_SIZE = 20;
    touchgfx::Unicode::UnicodeChar line2Buffer[LINE2_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<DemoViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;
    touchgfx::Callback<DemoViewBase> keyboardCanceledCallback;
    touchgfx::Callback<DemoViewBase> keyboardAppliedCallback;
    touchgfx::Callback<DemoViewBase> keyboardKeyPressedCallback;
    touchgfx::Callback<DemoViewBase, Unicode::UnicodeChar> keyboardCharacterTypedCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);
    void keyboardCanceledCallbackHandler();
    void keyboardAppliedCallbackHandler();
    void keyboardKeyPressedCallbackHandler();
    void keyboardCharacterTypedCallbackHandler(Unicode::UnicodeChar value);

};

#endif // DEMOVIEWBASE_HPP
