/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef KEYBOARDBASE_HPP
#define KEYBOARDBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/mixins/ClickListener.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class KeyboardBase : public touchgfx::Container
{
public:
    KeyboardBase();
    virtual ~KeyboardBase();
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setAppliedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->appliedCallback = &callback;
    }
    void setCanceledCallback(touchgfx::GenericCallback<>& callback)
    {
        this->canceledCallback = &callback;
    }
    void setKeyPressedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->keyPressedCallback = &callback;
    }
    void setCharacterTypedCallback(touchgfx::GenericCallback<Unicode::UnicodeChar>& callback)
    {
        this->characterTypedCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitAppliedCallback()
    {
        if (appliedCallback && appliedCallback->isValid())
        {
            this->appliedCallback->execute();
        }
    }
    virtual void emitCanceledCallback()
    {
        if (canceledCallback && canceledCallback->isValid())
        {
            this->canceledCallback->execute();
        }
    }
    virtual void emitKeyPressedCallback()
    {
        if (keyPressedCallback && keyPressedCallback->isValid())
        {
            this->keyPressedCallback->execute();
        }
    }
    virtual void emitCharacterTypedCallback(Unicode::UnicodeChar value)
    {
        if (characterTypedCallback && characterTypedCallback->isValid())
        {
            this->characterTypedCallback->execute( value);
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::Container outerContainer;
    touchgfx::Box background;
    touchgfx::Container innerContainer;
    touchgfx::Container keysContainer;
    touchgfx::Container row1;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key01;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key02;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key03;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key04;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key05;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key06;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key07;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key08;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key09;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key10;
    touchgfx::ClickListener< touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key11;
    touchgfx::Container row2;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key12;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key13;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key14;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key15;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key16;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key17;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key18;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key19;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key20;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key21;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key22;
    touchgfx::Container row3;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key23;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key24;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key25;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key26;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key27;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key28;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key29;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key30;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key31;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key32;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key33;
    touchgfx::Container row4;
    touchgfx::ClickListener< touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger >  >  > key34;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key35;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key36;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key37;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key38;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key39;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key40;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key41;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key42;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key43;
    touchgfx::ClickListener< touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ToggleButtonTrigger >  >  > key44;
    touchgfx::Container row5;
    touchgfx::ClickListener< touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key45;
    touchgfx::ClickListener< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  > key46;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key47;
    touchgfx::ClickListener< touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key48;
    touchgfx::ClickListener< touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  > key49;
    touchgfx::BoxWithBorder textBackground;
    touchgfx::Container textContainer;
    touchgfx::Box caret;
    touchgfx::TextAreaWithOneWildcard text;

    /*
     * Wildcard Buffers
     */
    static const uint16_t KEY01_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key01Buffer[KEY01_SIZE];
    static const uint16_t KEY02_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key02Buffer[KEY02_SIZE];
    static const uint16_t KEY03_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key03Buffer[KEY03_SIZE];
    static const uint16_t KEY04_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key04Buffer[KEY04_SIZE];
    static const uint16_t KEY05_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key05Buffer[KEY05_SIZE];
    static const uint16_t KEY06_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key06Buffer[KEY06_SIZE];
    static const uint16_t KEY07_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key07Buffer[KEY07_SIZE];
    static const uint16_t KEY08_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key08Buffer[KEY08_SIZE];
    static const uint16_t KEY09_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key09Buffer[KEY09_SIZE];
    static const uint16_t KEY10_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key10Buffer[KEY10_SIZE];
    static const uint16_t KEY12_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key12Buffer[KEY12_SIZE];
    static const uint16_t KEY13_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key13Buffer[KEY13_SIZE];
    static const uint16_t KEY14_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key14Buffer[KEY14_SIZE];
    static const uint16_t KEY15_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key15Buffer[KEY15_SIZE];
    static const uint16_t KEY16_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key16Buffer[KEY16_SIZE];
    static const uint16_t KEY17_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key17Buffer[KEY17_SIZE];
    static const uint16_t KEY18_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key18Buffer[KEY18_SIZE];
    static const uint16_t KEY19_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key19Buffer[KEY19_SIZE];
    static const uint16_t KEY20_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key20Buffer[KEY20_SIZE];
    static const uint16_t KEY21_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key21Buffer[KEY21_SIZE];
    static const uint16_t KEY22_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key22Buffer[KEY22_SIZE];
    static const uint16_t KEY23_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key23Buffer[KEY23_SIZE];
    static const uint16_t KEY24_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key24Buffer[KEY24_SIZE];
    static const uint16_t KEY25_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key25Buffer[KEY25_SIZE];
    static const uint16_t KEY26_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key26Buffer[KEY26_SIZE];
    static const uint16_t KEY27_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key27Buffer[KEY27_SIZE];
    static const uint16_t KEY28_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key28Buffer[KEY28_SIZE];
    static const uint16_t KEY29_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key29Buffer[KEY29_SIZE];
    static const uint16_t KEY30_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key30Buffer[KEY30_SIZE];
    static const uint16_t KEY31_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key31Buffer[KEY31_SIZE];
    static const uint16_t KEY32_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key32Buffer[KEY32_SIZE];
    static const uint16_t KEY33_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key33Buffer[KEY33_SIZE];
    static const uint16_t KEY35_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key35Buffer[KEY35_SIZE];
    static const uint16_t KEY36_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key36Buffer[KEY36_SIZE];
    static const uint16_t KEY37_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key37Buffer[KEY37_SIZE];
    static const uint16_t KEY38_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key38Buffer[KEY38_SIZE];
    static const uint16_t KEY39_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key39Buffer[KEY39_SIZE];
    static const uint16_t KEY40_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key40Buffer[KEY40_SIZE];
    static const uint16_t KEY41_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key41Buffer[KEY41_SIZE];
    static const uint16_t KEY42_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key42Buffer[KEY42_SIZE];
    static const uint16_t KEY43_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key43Buffer[KEY43_SIZE];
    static const uint16_t KEY47_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key47Buffer[KEY47_SIZE];
    static const uint16_t KEY48_SIZE = 2;
    touchgfx::Unicode::UnicodeChar key48Buffer[KEY48_SIZE];
    static const uint16_t TEXT_SIZE = 40;
    touchgfx::Unicode::UnicodeChar textBuffer[TEXT_SIZE];

private:

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* appliedCallback;
    touchgfx::GenericCallback<>* canceledCallback;
    touchgfx::GenericCallback<>* keyPressedCallback;
    touchgfx::GenericCallback<Unicode::UnicodeChar>* characterTypedCallback;

};

#endif // KEYBOARDBASE_HPP
